/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IMAGEN_MEMORY;

import javax.swing.JOptionPane;

/**
 *
 * @author IMAGEN MEMORY
 */
public class Interfazpreguntas extends javax.swing.JFrame {
    //Creamos las instancias a las clases que ocuparemos 

    HiloPreguntas pregunta = new HiloPreguntas();
    Preguntas preguntas = new Preguntas();
    Puntaje puntaje = new Puntaje();    
    HiloRespuestas respuesta = new HiloRespuestas();

    public Interfazpreguntas() {
        initComponents();
        this.setLocationRelativeTo(null);

        pregunta.recibejLabel1(lbpregunta);// enviamos el label que ocuparemos para mostrar la pregunta
        pregunta.start();// iniciamos el hilo

        respuesta.recibejLabell(btnopcion1, btnopcion2, btnopcion3);// enviamos los label que usaremos para mostrar las respuestas 
        respuesta.start();// inciamos el hilo 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbpregunta = new javax.swing.JLabel();
        btnopcion2 = new javax.swing.JButton();
        btnopcion1 = new javax.swing.JButton();
        btnopcion3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 179, 179), 2));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_ask_question_52px.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PREGUNTA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(280, 280, 280))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lbpregunta.setBackground(new java.awt.Color(255, 255, 255));
        lbpregunta.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        lbpregunta.setForeground(new java.awt.Color(51, 51, 51));
        lbpregunta.setOpaque(true);

        btnopcion2.setBackground(new java.awt.Color(248, 228, 49));
        btnopcion2.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        btnopcion2.setForeground(new java.awt.Color(255, 255, 255));
        btnopcion2.setBorder(null);
        btnopcion2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnopcion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopcion2ActionPerformed(evt);
            }
        });

        btnopcion1.setBackground(new java.awt.Color(186, 237, 52));
        btnopcion1.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        btnopcion1.setForeground(new java.awt.Color(255, 255, 255));
        btnopcion1.setBorder(null);
        btnopcion1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnopcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopcion1ActionPerformed(evt);
            }
        });

        btnopcion3.setBackground(new java.awt.Color(255, 148, 45));
        btnopcion3.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        btnopcion3.setForeground(new java.awt.Color(255, 255, 255));
        btnopcion3.setBorder(null);
        btnopcion3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnopcion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopcion3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnopcion3, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnopcion2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnopcion1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(287, 287, 287))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbpregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(lbpregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnopcion1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnopcion2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnopcion3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnopcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopcion1ActionPerformed

        preguntas.elegidas[preguntas.contadorposcionpreg] = preguntas.contadorPreguntas;
        preguntas.contadorposicionresp = preguntas.contadorposcionpreg + 1;
        preguntas.elegidas[preguntas.contadorposicionresp] = 1;
        preguntas.contadorposcionpreg += 2;

        if (preguntas.contador != preguntas.limite) {// verificamos que el contador de ejecucion no supere el limite

            Cerrar();
        } else {
            // en caso de que se supere el limite entonces detemos los hilos que tenemos corriendo 
            FinalizarHilos();
            CalcularPuntaje();

        }
    }//GEN-LAST:event_btnopcion1ActionPerformed

    private void btnopcion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopcion2ActionPerformed
        preguntas.elegidas[preguntas.contadorposcionpreg] = preguntas.contadorPreguntas;
        preguntas.contadorposicionresp = preguntas.contadorposcionpreg + 1;
        preguntas.elegidas[preguntas.contadorposicionresp] = 2;
        preguntas.contadorposcionpreg += 2;

        if (preguntas.contador != preguntas.limite) {// verificamos que el contador de ejecucion no supere el limite

            Cerrar();
        } else {
            // en caso de que se supere el limite entonces detemos los hilos que tenemos corriendo 
            FinalizarHilos();
            CalcularPuntaje();

        }
    }//GEN-LAST:event_btnopcion2ActionPerformed

    private void btnopcion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopcion3ActionPerformed
        preguntas.elegidas[preguntas.contadorposcionpreg] = preguntas.contadorPreguntas;
        preguntas.contadorposicionresp = preguntas.contadorposcionpreg + 1;
        preguntas.elegidas[preguntas.contadorposicionresp] = 3;
        preguntas.contadorposcionpreg += 2;

        if (preguntas.contador != preguntas.limite) {// verificamos que el contador de ejecucion no supere el limite
            Cerrar();
        } else {
            // en caso de que se supere el limite entonces detemos los hilos que tenemos corriendo 
            FinalizarHilos();
            CalcularPuntaje();
        }
    }//GEN-LAST:event_btnopcion3ActionPerformed

    public void Cerrar() { // cierra la ventana actual y crea la instancia para la siguiente ventana 
        Visor1 visor = new Visor1();
        visor.setVisible(true);
        this.dispose();

    }

    public void FinalizarHilos() {

        // detiene los hilos en ejecucion una vez se haya alcanzado el limite del contador
        pregunta.stop();
        respuesta.stop();
        
        puntaje.setVisible(true);
        this.dispose();
    }

    public void CalcularPuntaje() {
        /*
        En esta funcion verificaremos si las respuestas escogidas en el juego corresponden a las respuestas correctas que tenemos 
        en el archivo de texto 
        
        funciona de la siguiente manera :
        
        1.- las respuestas correctas del txt seran pasadas a un arreglo que se llama respuestas 
       
       2.- cada que se muestre la pregunta y se seleccione una opcion se almacenara 1,2 o 3 en un arreglo que se llama elegidas 
        ademas de almacenar el numero de pregunta que se mostro 
        
        ejemplo: 
          se muestra la pregunta 5
         y se escoge el 2do boton de arriba hacia abajo y se almacena un 2 como respuesta 
        
        entonces en el arreglo queda de la siguiente manera
        
        |5|2|
        0  1 
        
        en la posicion par del arreglo se almacena el numero de pregunta y en la posicion impar se almacena el numero de respuesta que se escogio 
        para eso debemos llevar un contador que indica el numero de la pregunta 
        otro que indica la posicion de la pregunta en el arreglo de respuestas elegidas
        y otro que indica la posicion de las respuestas en el arreglo de respuestas elegidas
       
        
        
        */
        int[] respuestas = preguntas.correctas();
        
        int aciertos=0; // variable para almacenar el numero de aciertos correctos que tuvo
        int puntajetotal = 0; // variable para obtener el puntaje
        int valorpreg = 0;// almacenars el numero de pregunta
        int valorresp = 0;// almacenara el numero de respuesta
        int j = 0, k = 0; // seran los contadores para hacer las comparaciones 

        for (int i = 0; i <= preguntas.elegidas.length; i += 2) { // en este bucle recorreremos el arreglo con las preguntas y respuestas que hubieron en el juego
            
            if(i<10){ // esta condicion es para evitar que el iterador supere el tamaño del arreglo
            k = i + 1; // asignamos el valor mas 1 para obtener el indice de las respuestas 
            valorpreg = preguntas.elegidas[i]; // almacenamos el valor de la pregunta que esta en el indice i
            valorresp = preguntas.elegidas[k];// almacenamos el valor de la respuesta que esta en el indice k

         /*
            
            Hasta este punto ya tenemos los valores de las respuestas y el indice de la pregunta
            lo que se hace es buscar en el arreglo de respuestas correctas en el indice de la pregunta
            y se compara con el valor que hay en esa posicion y el valor que hay en la variable de respuesta
            */
            if (respuestas[valorpreg] == valorresp) { // en esta condicion verificamos que las respuestas sean correctas 
                puntajetotal += 20; // si la condicion se cumple el puntaje aumenta en 20
                aciertos++; // y aumenta el valor de los aciertos
            }
            }
          
        }
    /*Terminado el bucle tendremos ya calculados los aciertos y el puntaje y solo resta enviarlos a la interaz de Puntaje*/
     puntaje.resultados(aciertos,puntajetotal);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnopcion1;
    private javax.swing.JButton btnopcion2;
    private javax.swing.JButton btnopcion3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbpregunta;
    // End of variables declaration//GEN-END:variables
}
